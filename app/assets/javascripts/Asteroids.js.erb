
(function($){
    var game = new Phaser.Game(960, 600, Phaser.CANVAS, 'gamecontainer', { preload: preload, create: create, update: update });
    var spaceship;
    var asteroid;
    var asteroids;
    var asteroidTime = 0;
    var asteroidXPath;
    var asteroidYPath;
    var bulletTime = 0;
    var bullet;
    var bullets;
    var emitter;
    var explode;
    var explosions;
    var fireButton;
    var bulletCounter = 30;
    var score = 0;
    var bullets = 0;
    var livesText;
    var lives = 3;
    var accuracy = 1;
    var shotsFired = 1;
    var shotsHit = 1;

    function preload() {
        //load all our sprite images
        game.load.image('star', '<%= image_path('spark.png') %>');
        game.load.image('spaceship', '<%= image_path('spaceship.png') %>');
        game.load.image('bullet', '<%= image_path('torpedo2.png') %>');
        game.load.image('asteroid', '<%= image_path('asteroids_demo.png') %>');
        game.load.spritesheet('asteroidExplosion', '<%= image_path('explosion_sprite_sheet.png') %>', 128, 128);
        game.load.image('lives', '<%= image_path('spaceship.png') %>');
        
        //add score keeper
        scoreText = game.add.text(game.world.centerX - 390, game.world.centerY - 265, "Score: 0", {
        font: "40px Arial",
        fill: "#F83F00",
        align: "center"
        });
        scoreText.anchor.setTo(0.5, 0.5);
        
        //add lives text to the game
        livesText = game.add.text(game.world.centerX + 230, game.world.centerY - 265, "Lives:", {
        font: "40px Arial",
        fill: "#F83F00",
        align: "center"
        });
        livesText.anchor.setTo(0.5, 0.5);
        
        //add bullet count to game
        bulletText = game.add.text(game.world.centerX - 390, game.world.centerY - 205, "Bullets: 30", {
        font: "40px Arial",
        fill: "#F83F00",
        align: "center"
        });
        bulletText.anchor.setTo(0.5, 0.5);
        
        //add accuracy counter to game
        accuracyText = game.add.text(game.world.centerX + 230, game.world.centerY - 205, "Accuracy: 100%", {
        font: "25px Arial",
        fill: "#F83F00",
        align: "center"
        });
        accuracyText.anchor.setTo(0.5, 0.5);
        
    }

    function create() {
        
        // Adds a starry particle background
        emitter = game.add.emitter(game.world.centerX, 0, 400);
        emitter.width = game.world.width;
        emitter.makeParticles('star');
        emitter.minParticleScale = 0.1;
	    emitter.maxParticleScale = 0.2;
	    emitter.setYSpeed(500, 600);
	    emitter.setXSpeed(-5, 5);
        emitter.minRotation = 0;
        emitter.maxRotation = 0
        emitter.start(false, 1600, 5, 0);

        //Starry background    ***old and caused lag*** 
        //starbackground = game.add.tileSprite(0, 0, 960, 600, 'starbackground');
        
        
        // Add spaceship to the game
        spaceship = game.add.sprite(game.world.width/2, game.world.height - 100, 'spaceship');
        //  Enable physics on the spaceship
        game.physics.arcade.enable(spaceship);

        //  move the ship left and right
        spaceship.animations.add('left', [0, 1, 2, 3], 10, true);
        spaceship.animations.add('right', [5, 6, 7, 8], 10, true);

        //  Our bullet group
        bullets = game.add.group();
        bullets.enableBody = true;
        bullets.physicsBodyType = Phaser.Physics.ARCADE;
        bullets.createMultiple(30, 'bullet');
        bullets.setAll('anchor.x', 0.5);
        bullets.setAll('anchor.y', 1);
        bullets.setAll('outOfBoundsKill', true);
        bullets.setAll('checkWorldBounds', true);
        

        //  Our asteroid group
        asteroids = game.add.group();
        asteroids.enableBody = true;
        asteroids.physicsBodyType = Phaser.Physics.ARCADE;
        asteroids.createMultiple(100, 'asteroid');
        asteroids.setAll('anchor.x', 0.5);
        asteroids.setAll('anchor.y', 0.5);
        asteroids.setAll('outOfBoundsKill', true);
        asteroids.setAll('checkWorldBounds', true);
        
        // Add images for lives to screen
        
        life1 = game.add.sprite(game.world.centerX + 340, game.world.centerY - 300, 'lives');
        life2 = game.add.sprite(game.world.centerX + 390, game.world.centerY - 300, 'lives');
        life3 = game.add.sprite(game.world.centerX + 440, game.world.centerY - 300, 'lives');

       
        // Sets up game over screen
        gameOverText = game.add.text(game.world.centerX,game.world.centerY,' ', { font: '84px Arial', fill: '#fff' });
        gameOverText.anchor.setTo(0.5, 0.5);
        gameOverText.visible = false;

        // Setup spacebar as fire button
        fireButton = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);

    }

    function update() {
        
        // ***old and caused lag*** 
        //move background
        //starbackground.tilePosition.y += 2;

        //drop the asteroids
        asteroidDrop();

        //find the ship position to send our asteroids to
        asteroidXPath = spaceship.world.x;
        asteroidYPath = spaceship.world.y;

        //Setup collisions
        game.physics.arcade.overlap(asteroids, bullets, bulletHitAsteroid, null, this);
        game.physics.arcade.overlap(asteroids, spaceship, asteroidHitSpaceship, null, this);
        game.physics.arcade.collide(asteroids, asteroids);

        var cursors = game.input.keyboard.createCursorKeys();
        //Reset the players velocity (movement)
        spaceship.body.velocity.x = 0;

        // Ship movement responds to keyboard
        if (cursors.left.isDown)
        {
            //  Move to the left
            spaceship.body.velocity.x = -150;
            spaceship.animations.play('left');
        } 
        else if (cursors.right.isDown)
        {
            //  Move to the right
            spaceship.body.velocity.x = 150;
            spaceship.animations.play('right');
        }
        else
        {
            //  Stand still
            spaceship.animations.stop();
            spaceship.frame = 4;
        }

        //  Firing?
        if (fireButton.isDown && bulletCounter > 0)
        {
            fireBullet();
        }
        
        updateAccuracy();

        function fireBullet () {

            //  To avoid them being allowed to fire too fast we set a time limit
            if (game.time.now > bulletTime)
            {
                //  Grab the first bullet we can from the pool
                bullet = bullets.getFirstExists(false);

                if (bullet)
                {
                    //  And fire it
                    bullet.reset(spaceship.x + 30, spaceship.y + 8);
                    bullet.body.velocity.y = -400;
                    bulletTime = game.time.now + 200;
                }
                updateBulletFire();
                
                updateAccuracy();
            }

        }

        function asteroidDrop() {

            //  To avoid them being allowed to fall too frequently we set a time limit
            if (game.time.now > asteroidTime)
            {
                //  Grab the first asteroid we can from the pool
                asteroid = asteroids.getFirstExists(false);

                if (asteroid)
                {
                    //  And drop it
                    asteroid.reset(game.world.randomX, -30);
                    game.physics.arcade.moveToXY(asteroid, asteroidXPath, asteroidYPath, (Math.random() * 300) + 50);
                    asteroidTime = (game.time.now + ((Math.random() * 1000) + 100));
                    asteroid.scale.setTo((Math.random() * 1.5) + .5);
                    asteroid.body.angularAcceleration = (Math.random() * 50) + 5;
                }
            }
        }

        function resetBullet (bullet) {

            //  Called if the bullet goes out of the screen
            bullet.kill();

        }

        function bulletHitAsteroid(asteroid, bullet) {

            // kill asteroid
            asteroid.kill();

            // kill bullet
            bullet.kill();

            updateScore();
            updateAccuracy();
            updateBulletAdd();

            // Explosions
            explosions = game.add.sprite(asteroid.x - (asteroid.width), asteroid.y - (asteroid.height), 'asteroidExplosion');
            explode = explosions.animations.add('explode');
            explosions.animations.play('explode', 50);
            
             
          }

        function asteroidHitSpaceship(spaceship, asteroid) {
            switch (lives) {
                case 3:
                    life3.kill();
                    asteroid.kill();
                    break;
                case 2:
                    life2.kill();
                    asteroid.kill();
                    break;
                case 1:
                    life1.kill();
                    
                    bulletCounter = 0;

                    // kill asteroid
                    asteroid.kill();

                    // kill spaceship
                    spaceship.kill();

                    explosions = game.add.sprite(spaceship.x - 40, spaceship.y - 30, 'asteroidExplosion');
                    explode = explosions.animations.add('explode');
                    explosions.animations.play('explode', 10);
                    
                    gameOver();       
            }
            
            lives --;
            
        

          }
        function updateBulletFire() {
            shotsFired++;
            bulletCounter--;
            bulletText.setText("Bullets: " + bulletCounter + "");
        }
        
        function updateBulletAdd() {
            if(asteroid.width > 40) {
                bulletCounter += 3;
            } else if (asteroid.width > 25) {
                bulletCounter += 2;
            } else {
                bulletCounter++;
            }
            shotsHit++;
        }
        
        function updateAccuracy() {
            accuracy = (shotsHit / shotsFired) * 100;
            accuracyText.setText("Accuracy: " + Math.round(accuracy) +"%");
        }

        function updateScore() {

            score++;
            scoreText.setText("Score: " + score + "");

        }

        function gameOver() {

          gameOverText.text=" GAME OVER \n Click to restart";
          gameOverText.visible = true;

          //the "click to restart" handler
          game.input.onTap.addOnce(restart,this);

        }

        function restart () {
            // reset lives
            lives = 3;
            
            //reset score back to zero
            score = -1;
            updateScore();
            
            //reset bullet counter back to 30
            bulletCounter = 31;
            updateBulletFire();
            
            //reset accuracy
            shotsFired = 1;
            shotsHit = 1;
            accuracy = 1;
            updateAccuracy();
            
            
            //  A new level starts
            //  And brings the aliens back from the dead :)
            asteroids.removeAll();
            //hides the text
            gameOverText.visible = false;
            //runs create function to bring back all the objects
            create()
        }
    }
})(jQuery);
